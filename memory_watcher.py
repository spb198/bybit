import psutil
import time
import os

PROCESS_LIMIT_MB = 250       # –ü–æ—Ä–æ–≥ –¥–ª—è –æ–¥–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
TOTAL_LIMIT_MB = 5000        # –û–±—â–∏–π –ª–∏–º–∏—Ç –¥–ª—è –≤—Å–µ—Ö Python-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤
LOG_FILE = "logs/memory_watch.log"
os.makedirs(os.path.dirname(LOG_FILE), exist_ok=True)

def log(msg):
    timestamp = time.strftime('%Y-%m-%d %H:%M:%S')
    with open(LOG_FILE, "a", encoding="utf-8") as f:
        f.write(f"[{timestamp}] {msg}\n")
        f.flush()

def monitor_memory():
    print(f"üß† Watchdog: —Å–ª–µ–¥–∏–º –∑–∞ Python-–ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏ ‚Äî –æ–±—â–∞—è –≥—Ä–∞–Ω–∏—Ü–∞ {TOTAL_LIMIT_MB} MB")
    while True:
        processes = []
        total_mem = 0

        for proc in psutil.process_iter(['pid', 'name', 'memory_info', 'cmdline']):
            try:
                if 'python' in proc.info['name'].lower():
                    mem_mb = proc.info['memory_info'].rss / 1024 / 1024
                    cmd = ' '.join(proc.info['cmdline'])
                    processes.append((proc, mem_mb, cmd))
                    total_mem += mem_mb
            except (psutil.NoSuchProcess, psutil.AccessDenied):
                continue

        log(f"üìä –í—Å–µ–≥–æ Python-–ø–∞–º—è—Ç–∏: {total_mem:.2f} MB")

        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
        for proc, mem_mb, cmd in processes:
            log(f"PID {proc.pid} | {mem_mb:.2f} MB | {cmd}")

        # –ï—Å–ª–∏ —Å—É–º–º–∞—Ä–Ω–∞—è –ø–∞–º—è—Ç—å –ø—Ä–µ–≤—ã—Å–∏–ª–∞ –ª–∏–º–∏—Ç ‚Äî —É–±–∏–≤–∞–µ–º —Å–∞–º—ã—Ö —Ç—è–∂—ë–ª—ã—Ö
        if total_mem > TOTAL_LIMIT_MB:
            log(f"üö® –ü–∞–º—è—Ç—å –ø—Ä–µ–≤—ã—à–µ–Ω–∞ ({total_mem:.2f} MB > {TOTAL_LIMIT_MB} MB) ‚Äî –Ω–∞—á–∏–Ω–∞–µ–º —Å–±—Ä–æ—Å...")
            # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —É–±—ã–≤–∞–Ω–∏—é
            for proc, mem_mb, cmd in sorted(processes, key=lambda x: -x[1]):
                try:
                    proc.kill()
                    log(f"üíÄ –£–±–∏—Ç PID {proc.pid} | {mem_mb:.2f} MB | {cmd}")
                    total_mem -= mem_mb
                    if total_mem <= TOTAL_LIMIT_MB:
                        log(f"‚úÖ –ü–∞–º—è—Ç—å —Å–Ω–∏–∂–µ–Ω–∞ –¥–æ {total_mem:.2f} MB ‚Äî –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —É–±–∏–π—Å—Ç–≤–∞")
                        break
                except Exception as e:
                    log(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–±–∏—Ç—å PID {proc.pid}: {e}")

        time.sleep(60)

if __name__ == "__main__":
    monitor_memory()
